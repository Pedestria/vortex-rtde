CSSDependency: 

Import './example.css'  --> var style = document.createElement('style');style.innerHTML = cssContent;document.head.appendChild(style);


AMD Define Transformation:

define(['module0','module1'], function(module0_object,module1_object) {
    USE MODULE0 and MODULE1 HERE!
})  -->

shuttle.planetCluster(['./planet_0.js','./planet_1.js'], function(module0_object,module1_object) {
    USE MODULE0 and MODULE1 HERE!
})

Shuttle Module Defintion:


//var lib = shuttle("lib") --> Intializes Library
//lib.b() --> Named Import from lib
//lib.default() --> Default Import from lib

//shuttle_exports.b = b --> Named Export
//shuttle_exports.default = a --> Default Export

//shuttle.planet('planet1').then(function(entry_module){
    ACCESS ENTRY POINT EXPORTS HERE!!
}) 
--> Planet Import(Async Import via Dynamic Import)

'planet1' = Planet Name (Entry module is defined in the planet bundle itself!)

//shuttle.planetCluster(['planet0','planet1'], function(planet0,planet1) {

}) -->
Planet Cluster Impot (Async Import via AMD Define)

'planet0','planet1' = Planet Name (Entry module is defined in the planet bundle itself!)

function(planet0,planet1) = Callback Function (ModuleObjects are mapped from array to callback arguments)